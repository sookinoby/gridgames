

@import "_functions";

$width: 400px;
$height: 310px;
$max-tile-count: 4;
$tile-padding: 10px;
$tile-default-color: #EEE4DA;
$tile-question-color: #0EBFE9;
$tile-wrong-color: #E0420D;
$tile-right-color : #3DF577;
$tile-select-color : #E0FFFF;
$white : #FFFFFF;
$green-color : #04B404;
$red-color: #E0420D;
$default-color: #EEE4DA;
$blue-color:#3399ff;
$tile-font-size: 8px;
$tile-radius: 3px;
$tile-font: 'Open Sans', sans-serif;
$colors: #EEE4DA, #EAE0C8, #F59563, #3399ff, #ffa333, #cef030, #2b81d6;

$game-container-background: #bbada0;
$tile-color: #eee4da;
$tile-gold-color: #edc22e;
$tile-gold-glow-color: lighten($tile-gold-color, 15%);
$text-color: #000000;
$bright-text-color: #f9f6f2;

// DON'T EDIT BELOW
$tile-size: ($width - $tile-padding * ($max-tile-count + 1)) / $max-tile-count;
$transition-time: 100ms;
$apperance-time: 4s;

.container {
 
}

html, body {
  margin: 0;
  padding: 0;

  background: #faf8ef;
  color: $text-color;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 18px;
}

p {
   margin-top: 0;
   margin-bottom: 10px;
   line-height: 1.65;
   display: block;
   -webkit-margin-before: 1em;
   -webkit-margin-after: 1em;
   -webkit-margin-start: 0px;
   -webkit-margin-end: 0px;
}

a {
  color: $text-color;
  font-weight: bold;
  text-decoration: underline;
  cursor: pointer;
  &:hover {
    color: darken($text-color, 5%);
  }
}

strong {
  &.important {
    text-transform: uppercase;
  }
}

hr {
  border: none;
  border-bottom: 1px solid lighten($text-color, 40%);
  margin-top: 20px;
  margin-bottom: 30px;
}

#heading {
   margin-top: 4em;
}

h1.title {
   font-size: 50px;
   font-weight: bold;
   margin: 0;
   display: block;
    text-align: center;
}

.scores-container {
  text-align: right;
  float: left;
}

.score-container, .best-container, .total-facts, .fact, .smiley, .question-container {
  $inner-height: 15px;

  min-height: 2.5em;
  display: inline-block;
  background: $game-container-background;
  font-size: $inner-height;
  height: auto;
  line-height: $inner-height + 10px;
  font-weight: bold;
  border-radius: 3px;
  color: white;
  margin-top: 8px;
  text-align: center;
  min-width: 8.3em;
  float:left;

}

#instructions {
   padding-top: 0.5em;

}

.game-button {
   display: inline-block;
   margin-top: 5px;
   margin-left: 5px;     
   background: #8f7a66;
   border-radius: 3px;
   padding: 0 10px;
   text-decoration: none;
   color: #f9f6f2;
   height: 40px;
   line-height: 42px;
   cursor: pointer;
   display: block;
   text-align: center;
   float: left;
   border: none;
   width: 6.3em;
}

#content {
   
}

#game-container {
   position: relative;
   width: $width;
   height: $width;
   margin-left: 0px; 
}

#game-container-2 {
   position: relative;
   width: $width;
   height: $height;
   margin-left: 0px; 
}

.game-overlay {
   width: $width;
   height: $width;
   background-color: rgba(255, 255, 255, 0.47);
   position: absolute;
   top: 0;
   left: 0;
   z-index: 10;
   text-align: center;
   padding-top: 35%;
   font-size: 3em;
   font-weight: bold;
    
    &.game3overlay {
    height: $height;
    }

   .lower {
      display: block;
      margin-top: 29px;
      font-size: 16px;

      a {
         display: inline-block;
         background: #8f7a66;
         border-radius: 3px;
         padding: 0 20px;
         text-decoration: none;
         color: #f9f6f2;
         height: 40px;
         line-height: 42px;
         cursor: pointer;
         margin-left: 9px;
      }
   }
}








.text-color-green {
color:$green-color;
}

.text-color-red {
color:$red-color;
}

.background-color-blue {
 background-color:rgba($blue-color, .80);
}

.background-color-green {
 background-color:rgba($green-color, .80);
}

.background-color-red {
 background-color:rgba($red-color, .80);
}



.background-color-default {
 background-color:rgba($default-color,1.00);
}

.background-color-white {
 background-color:rgba($white,1.00);
}


.top-space-40 {
margin-top:40px;
}

#game { 
  position: relative;
  padding: $tile-padding;
  cursor: default;
  background: #bbaaa0;
  border-radius: 6px;
  width: $width;
  height: $width;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;

&.game3 {
     height:$height;
    
}
  .grid-container {
    position: absolute;
    z-index: 1;
    margin: 0 auto;

    .grid-cell {
      width: $tile-size; //($width / $max-tile-count) - ($tile-padding + ($tile-radius * 2));
      height: $tile-size; //($width / $max-tile-count) - ($tile-padding + ($tile-radius * 2));
      margin-bottom: $tile-padding;
      margin-right: $tile-padding;
      float: left;
      @include border-radius($tile-radius);
      background: rgba(238, 228, 218, 0.35);
      @include animation(appear $apperance-time 0s ease-in 1);
       &:last-child {
        margin-right: 0
      }
    }
  }

  .tile-container {
    position: absolute;
    z-index: 2;

    .tile {
      font-family: $tile-font;
      position: absolute;
      font-size: $tile-font-size;
      width: $tile-size;
      height: $tile-size;
      @include border-radius($tile-radius);
     
      // @include transition-property(transform);
      -webkit-transition-property: -webkit-transform;
      -moz-transition-property: -moz-transform;
      transition-property: transform;
      z-index: 2;

      &.ng-enter {
        
      }
      &.ng-enter-active .tile-inner {
      }

      &.tile-merged .tile-inner {
        @include animation(pop 50ms ease-in);
      }
      &.tile-merged-add-active .tile-inner {
      }

      &.ng-remove .tile-inner {
        // @include animation(pop 200ms ease $transition-time);
      }

      @for $x from 1 through $max-tile-count {
        @for $y from 1 through $max-tile-count {
          $zeroOffsetX: $x - 1;
          $zeroOffsetY: $y - 1;
          $newX: ($tile-size) * ($zeroOffsetX) + ($tile-padding * $zeroOffsetX);
          $newY: ($tile-size) * ($zeroOffsetY) + ($tile-padding * $zeroOffsetY);

          &.position-#{$zeroOffsetX}-#{$zeroOffsetY} { 
            @include transform(translate($newX, $newY));
          }
          &.position-#{$zeroOffsetX}-#{$zeroOffsetY}-add-active .tile-inner {
            // @include animation(appear 200ms ease);
            // @include animation-fill-mode(backwards);
          }
        }
      }
     
     &.normal-color .tile-inner {
        background: rgba($tile-default-color, .35);
     }
    
    
     &.tile-question .tile-inner {
         background: $tile-question-color;
      }
    
     &.right-answer .tile-inner {
         background: $tile-right-color;
      }
      &.selected-answer .tile-inner {
         background: $tile-select-color;
          
      }
   
    
     &.wrong-answer .tile-inner {
         background: $tile-wrong-color;
      }
    
      &.wrong-answer-text .tile-inner {
         color: $red-color;
      }
    
      &:last-child {
        margin-right: 0
      }

      .tile-inner {
        line-height: ($width/$max-tile-count) - $tile-padding;

        text-align: center;
        font-weight: bold;
        z-index: 10;
        font-size: 2.5em;
      }
    }
  }
}




@include keyframes(appear) {
  0% {
    opacity: 0;
    @include transform(scale(0));
  }
  50% {
    opacity: 1;
    @include transform(scale(1.2));
  }
  100% {
    opacity: 1;
    @include transform(scale(1));
  } 
}

@include keyframes(pop) {
  0% {
    opacity: 1;
    @include transform(scale(1));
  }
  50% {
    // opacity: 0;
    @include transform(scale(1.2));
  }
  100% {
    opacity: 0;
    @include transform(scale(1));
  }
}
